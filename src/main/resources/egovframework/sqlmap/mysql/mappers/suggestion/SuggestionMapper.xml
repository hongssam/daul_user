<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.com.suggestion.mapper.SuggestionMapper">
	<select id="selectSuggestionIdx" resultType="String">
		SELECT CONCAT('SG-',LPAD(count(*)+1,'6','0')) as 'suggestion_idx'
		FROM suggestion_main 
	</select>
	
	<insert id="registSuggestion">
		INSERT INTO daul.suggestion_main
		     (
		       suggestion_idx
		     , title
		     , content
		     , create_user
		     , create_date
		     , del_chk
		     )
		VALUES 
			 (
			   #{suggestion_idx}
		     , #{title}
		     , #{content}
		     , #{create_user}
		     , SYSDATE()
		     , 'N'
			 )
	</insert>
	
	<insert id="insertFile">
		INSERT INTO suggestion_attach
		     (
		       suggestion_idx
		     , org_file_name
		     , save_file_name
		     , file_size
		     , create_user
		     , del_chk
		     , create_date
		     , attach_type
		     )
		VALUES
		     (
		       #{idx}
		     , #{org_file_name}
		     , #{save_file_name}
		     , #{file_size}
		     , #{create_user}
		     , 'N'
		     , SYSDATE()
		     , #{attach_type}
		     )
	</insert>
	
	<sql id="whereBySuggestion">
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'title')">
			AND title like concat('%', #{search}, '%')
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'content')">
			AND content like concat('%', #{search}, '%')
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'create_user')">
			AND create_user like concat('%', #{search}, '%')
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@isNotEmpty(search_s_date)">
			<![CDATA[
			AND create_date >= date_format(concat(#{search_s_date}, ' 00:00:00'), '%Y-%m-%d %H:%i:%s')
			]]>
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@isNotEmpty(search_e_date)">
			<![CDATA[
			AND create_date <= date_format(concat(#{search_e_date}, ' 23:59:59'), '%Y-%m-%d %H:%i:%s')
			]]>
		</if>
	</sql>
	
	<select id="selectSuggestionListCnt" resultType="int">
		SELECT COUNT(*) 
		  FROM (
		  		SELECT sm.*
		  		     , CASE WHEN (like_count / 50 * 100) >= 100 THEN 100 ELSE (like_count / 50 * 100) END AS like_per
		  		  FROM (
						SELECT suggestion_idx
							 , title
							 , content
							 , (SELECT COUNT(*) FROM daul.user_like where parent_idx = s.suggestion_idx) AS like_count
							 , create_user
							 , DATE_FORMAT(create_date, '%Y-%m-%d') as create_date
							 , (SELECT count(*) FROM suggestion_opinion a WHERE a.suggestion_idx = s.suggestion_idx) AS opinion_cnt
						  FROM suggestion_main s
						 WHERE del_chk != 'Y'
						   <include refid="whereBySuggestion"/>
		  		  	   ) sm
		       ) sub
		 WHERE 1=1
		   <if test="@egovframework.com.cmmn.util.StringUtil@equals(type, 'like')">
		   <![CDATA[AND sub.like_per >= 100]]>
		   </if>
	</select>
	
	<select id="selectSuggestionList" resultType="egovframework.com.suggestion.vo.SuggestionVo">
		SELECT @rownum:=@rownum+1 AS num
  		     , sub.suggestion_idx
  		     , sub.title
  		     , sub.content
  		     , sub.like_count
  		     , sub.create_user
  		     , DATE_FORMAT(sub.create_date, '%Y-%m-%d') as create_date
  		     , sub.opinion_cnt
  		     , sub.like_per
		  FROM (
		  		SELECT sm.*
		  		     , CASE WHEN (like_count / 50 * 100) >= 100 THEN 100 ELSE (like_count / 50 * 100) END AS like_per
		  		  FROM (
						SELECT suggestion_idx
							 , title
							 , content
							 , (SELECT COUNT(*) FROM daul.user_like where parent_idx = s.suggestion_idx) AS like_count
							 , create_user
							 , create_date
							 , (SELECT count(*) FROM suggestion_opinion a WHERE a.suggestion_idx = s.suggestion_idx) AS opinion_cnt
						  FROM suggestion_main s
						 WHERE del_chk != 'Y'
						   <include refid="whereBySuggestion"/>
		  		  	   ) sm
		  		 <if test="@egovframework.com.cmmn.util.StringUtil@equals(order, '1')">
		  		 ORDER BY sm.create_date
		  		 </if>
		  		 <if test="@egovframework.com.cmmn.util.StringUtil@equals(order, '2')">
		  		 ORDER BY sm.like_count, sm.create_date
		  		 </if>
		  		 <if test="@egovframework.com.cmmn.util.StringUtil@equals(order, '3')">
		  		 ORDER BY sm.opinion_cnt, sm.create_date
		  		 </if>
		       ) sub
		     , (SELECT @rownum:=0) TMP
		 WHERE 1=1
		   <if test="@egovframework.com.cmmn.util.StringUtil@equals(type, 'like')">
		   <![CDATA[AND sub.like_per >= 100]]>
		   </if>
		   <if test="@egovframework.com.cmmn.util.StringUtil@equals(type, 'end')">
		   <![CDATA[AND DATE_FORMAT(DATE_SUB(SYSDATE(), INTERVAL 1 MONTH), '%Y-%m-%d') > sub.create_date]]>
		   </if>
		 ORDER BY num DESC
		 LIMIT #{startIndex}, #{pageSize}
	</select>
	
	<select id="selectSuggestion" resultType="egovframework.com.suggestion.vo.SuggestionVo">
		SELECT sm.*
			 , (SELECT COUNT(*) FROM daul.suggestion_opinion so WHERE so.suggestion_idx = sm.suggestion_idx) AS opinion_cnt
			 , (SELECT COUNT(*) FROM daul.user_like where parent_idx = #{suggestion_idx}) AS like_count
	 		 , (CASE WHEN ul.user_id IS NOT NULL THEN TRUE ELSE FALSE END) AS like_flag
		  FROM daul.suggestion_main sm
		  LEFT JOIN daul.user_like ul ON ul.parent_idx = sm.suggestion_idx AND ul.user_id = #{user_id}
		 WHERE del_chk != 'Y'
		   AND suggestion_idx = #{suggestion_idx}
	</select>
	
	<select id="selectSuggestionOpinionList" resultType="map">
		SELECT *
		  FROM (
				SELECT @rownum:=@rownum+1 								AS num
					 , so.opinion_idx
					 , so.suggestion_idx								AS idx
					 , so.opinion_content
					 , so.create_user
					 , so.update_user
					 , DATE_FORMAT(so.create_date, '%Y-%m-%d %H:%i')	AS create_date
					 , DATE_FORMAT(so.update_date, '%Y-%m-%d %H:%i') 	AS update_date
					 , so.del_chk
					 , so.suggestion_ref								AS ref
					 , so.suggestion_indent								AS indent
					 , so.suggestion_step								AS step
				     , u.auth_type 
				     , u.name
				  FROM daul.suggestion_opinion so
				  LEFT JOIN daul.user u ON so.create_user = u.user_id 
				  INNER JOIN (SELECT @rownum:=0) TMP
				 <!-- WHERE so.del_chk != 'Y' --> 
				 WHERE so.suggestion_idx = #{suggestion_idx}
				 ORDER BY so.suggestion_ref
				        , so.suggestion_step DESC
		  	   ) sub
		 ORDER BY sub.num DESC
		 LIMIT #{startIndex}, #{pageSize}
	</select>
	
	<select id="selectParentSuggestionOpinion" resultType="egovframework.com.suggestion.vo.SuggestionOpinionVo">
		SELECT suggestion_ref
		     , suggestion_indent
		     , suggestion_step
		  FROM daul.suggestion_opinion
		 WHERE opinion_idx = #{opinion_idx}
	</select>
	
	<update id="updateChildSuggestionOpinion">
		UPDATE daul.suggestion_opinion
		   SET suggestion_step = suggestion_step + 1
		 WHERE suggestion_ref = #{suggestion_ref}
		   <![CDATA[
		   AND suggestion_step > #{suggestion_step}
		   ]]>
	</update>
	
	<select id="selectSuggestionOpinionIdx" resultType="String">
		SELECT CONCAT('SG-OP-',LPAD(count(*)+1,'6','0')) as 'opinion_idx'
		FROM daul.suggestion_opinion 
	</select>
	
	<insert id="insertSuggestionOpinion">
		INSERT INTO daul.suggestion_opinion
		     (
		       opinion_idx
             , suggestion_idx
             , opinion_content
             , like_count
             , create_user
             , create_date
             , del_chk
             , suggestion_ref
             , suggestion_indent
             , suggestion_step
		     )
		VALUES
		     (
		       #{opinion_idx}
             , #{suggestion_idx}
             , #{opinion_content}
             , #{like_count}
             , #{create_user}
             , SYSDATE()
             , 'N'
             , #{suggestion_ref}
             , #{suggestion_indent}
             , #{suggestion_step}
		     )
	</insert>
	
	<update id="deleteSuggestionOpinion">
		UPDATE daul.suggestion_opinion
		   SET del_chk = 'Y'
		 WHERE opinion_idx = #{opinion_idx}
	</update>
	
	<select id="selectSuggestionUserLike" resultType="Map">
		SELECT *
		  FROM daul.user_like
		 WHERE parent_idx = #{suggestion_idx}
		   AND user_id = #{user_id}
	</select>
	
	<insert id="insertSuggestionUserLike">
		INSERT INTO daul.user_like
			 (
			   user_id
			 , parent_idx
			 )
		VALUES
			 (
			   #{user_id}
			 , #{suggestion_idx}
			 )
	</insert>
	
	<select id="selectSuggestionLikeCount" resultType="int">
		SELECT COUNT(*)
		  FROM daul.user_like
		 WHERE parent_idx = #{suggestion_idx}
	</select>
	
	<delete id="deleteSuggestionUserLike">
		DELETE FROM daul.user_like
		 WHERE parent_idx = #{suggestion_idx}
		   AND user_id = #{user_id}
	</delete>
	
	<select id="selectSuggestionFileList" resultType="map">
		SELECT *
		  FROM daul.suggestion_attach
		 WHERE del_chk != 'Y'
		   AND suggestion_idx = #{suggestion_idx}
		   <if test="attach_type != null and attach_type != ''">
		   AND attach_type = #{attach_type}
		   </if>
	</select>
	
	<select id="selectSuggestionDownloadFile" resultType="egovframework.com.cmmn.util.FileVo">
		SELECT org_file_name
		     , save_file_name
		  FROM daul.suggestion_attach
		 WHERE save_file_name = #{save_file_name}
	</select>
	
	<select id="selectSuggestionOpinionCount" resultType="String">
		SELECT COUNT(*)
		  FROM daul.suggestion_opinion
		 WHERE suggestion_idx = #{suggestion_idx}
	</select>
</mapper>                  