<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="egovframework.com.survey.mapper.SurveyMapper">

	<sql id="whereBySurvey">
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'title')">
			 AND title like concat('%', #{search}, '%')
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'content')">
			 AND content like concat('%', #{search}, '%')
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'create_user')">
			 AND create_user like concat('%', #{search}, '%')
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@isNotEmpty(search_s_date)">
			 <![CDATA[
			AND create_date >= date_format(concat(#{search_s_date}, ' 00:00:00'), '%Y-%m-%d %H:%i:%s')
			]]>
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@isNotEmpty(search_e_date)">
			 <![CDATA[
			AND create_date <= date_format(concat(#{search_e_date}, ' 23:59:59'), '%Y-%m-%d %H:%i:%s')
			]]>
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(order, '1')">
			ORDER BY create_date desc
		</if>
		 <if test="@egovframework.com.cmmn.util.StringUtil@equals(order, '2')">
			ORDER BY participation_count DESC, create_date desc
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(order, '3')">
			ORDER BY opinion_count DESC, create_date desc
		</if>
	</sql>
	<select id="getSurveyList" resultType = "egovframework.com.survey.vo.SurveyVo">
		SELECT @rownum:=@rownum+1 					AS num
				 , a.survey_idx
				 , (
				    SELECT count(*) 
				      FROM survey_opinion 
				     WHERE survey_idx = a.survey_idx
				   ) AS opinion_count
				 , (
				    SELECT count(*) 
				      FROM survey_participation 
				     WHERE survey_idx = a.survey_idx
				   ) AS participation_count
				 , a.title
				 , a.content
				 , DATE_FORMAT(a.s_date, '%Y-%m-%d %H:%i:%s') 		AS s_date
				 , DATE_FORMAT(a.e_date, '%Y-%m-%d %H:%i:%s') 		AS e_date
				 , a.survey_type
				 , a.create_user
				 , DATE_FORMAT(a.create_date, '%Y-%m-%d %H:%i:%s') AS create_date
				 <![CDATA[
				 , case when e_date < SYSDATE() then '투표완료'
					  when s_date > SYSDATE() then '투표전'
	 	              when e_date > SYSDATE() and SYSDATE() > s_date then '투표중'
	 	         ]]>
	             end as ing	
			  FROM daul.survey_main a
			     , (SELECT @rownum:=0) TMP
			  WHERE del_chk != 'Y'
			 <include refid="whereBySurvey"/>
			 LIMIT #{startIndex}, #{pageSize}
	</select>
	
	<select id="getSurveyNoticeList" resultType="egovframework.com.notice.vo.NoticeVo">
		SELECT *
		  FROM(
			  SELECT   @rownum:=@rownum+1 					AS num
			  			,a.notice_idx
				       ,a.title
				       ,a.content
				       ,a.notice_type
				       ,a.view_count
				       ,a.create_user
				       , DATE_FORMAT(a.create_date, '%Y-%m-%d %H:%i:%s') 		AS create_date
				       ,b.name 
			  FROM daul.daul_notice a
			  LEFT JOIN daul.user b
			    ON a.create_user = b.user_id 
			    , (SELECT @rownum:=0) TMP
			 WHERE a.del_chk = 'N' 
			   AND a.notice_type='survey'
			   <if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'title')">
				 AND a.title like concat('%', #{search}, '%')
			</if>
			<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'content')">
				 AND a.content like concat('%', #{search}, '%')
			</if>
			<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'create_user')">
				 AND b.name like concat('%', #{search}, '%')
			</if>
			 ORDER BY create_date ASC
		) sub
		ORDER BY sub.num DESC
		 LIMIT #{startIndex}, #{pageSize}
	</select>
	
	<select id="getSurveyNoticeListCnt" resultType="int">
		  SELECT   COUNT(*)
		  FROM daul.daul_notice a
		  LEFT JOIN daul.user b
		    ON a.create_user = b.user_id 
		 WHERE a.del_chk = 'N' 
		   AND a.notice_type='survey'
		   <if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'title')">
			 AND a.title like concat('%', #{search}, '%')
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'content')">
			 AND a.content like concat('%', #{search}, '%')
		</if>
		<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'create_user')">
			 AND b.name like concat('%', #{search}, '%')
		</if>
	</select>
	
	
	<select id="getSurveyNoticeDetail" resultType="egovframework.com.notice.vo.NoticeVo">
		   SELECT  a.notice_idx
		       ,a.title
		       ,a.content
		       ,a.notice_type
		       ,a.view_count
		       ,a.create_user
		       , DATE_FORMAT(a.create_date, '%Y-%m-%d %H:%i:%s') 		AS create_date
		       ,b.name 
		  FROM daul.daul_notice a
		  LEFT JOIN daul.user b
		  ON a.create_user = b.user_id 
		 WHERE del_chk = 'N' 
		   AND notice_idx=#{notice_idx}
	</select>
	
	<select id="getSurveyListCnt" resultType="int">
		SELECT COUNT(*)
			  FROM daul.survey_main
			  WHERE del_chk != 'Y'
			<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'title')">
				 AND title like concat('%', #{search}, '%')
			</if>
			<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'content')">
				 AND content like concat('%', #{search}, '%')
			</if>
			<if test="@egovframework.com.cmmn.util.StringUtil@equals(search_type, 'create_user')">
				 AND create_user like concat('%', #{search}, '%')
			</if>
			<if test="@egovframework.com.cmmn.util.StringUtil@isNotEmpty(search_s_date)">
				 <![CDATA[
				AND create_date >= date_format(concat(#{search_s_date}, ' 00:00:00'), '%Y-%m-%d %H:%i:%s')
				]]>
			</if>
			<if test="@egovframework.com.cmmn.util.StringUtil@isNotEmpty(search_e_date)">
				 <![CDATA[
				AND create_date <= date_format(concat(#{search_e_date}, ' 23:59:59'), '%Y-%m-%d %H:%i:%s')
				]]>
			</if>
	</select>
	
	<select id = "getSurveyDetail" resultType="egovframework.com.survey.vo.SurveyVo">
		SELECT   a.survey_idx
				 , (
				    SELECT count(*) 
				      FROM survey_opinion 
				     WHERE survey_idx = a.survey_idx
				   ) AS opinion_count
				 , (
				    SELECT count(*) 
				      FROM survey_participation 
				     WHERE survey_idx = a.survey_idx
				   ) AS participation_count
				 , a.title
				 , a.content
				 , DATE_FORMAT(a.s_date, '%Y-%m-%d %H:%i:%s') 		AS s_date
				 , DATE_FORMAT(a.e_date, '%Y-%m-%d %H:%i:%s') 		AS e_date
				 , a.survey_type
				 , a.create_user
				 , DATE_FORMAT(a.create_date, '%Y-%m-%d %H:%i:%s') AS create_date
				 <![CDATA[
				 , case when e_date < SYSDATE() then '투표완료'
					  when s_date > SYSDATE() then '투표전'
	 	              when e_date > SYSDATE() and SYSDATE() > s_date then '투표중'
	 	         ]]>
	             end as ing	
		    FROM daul.survey_main a	
		   WHERE a.survey_idx = #{survey_idx} 
	</select>
	
	<select id = "getSurveyOpinionList" resultType="map">
			SELECT * 
			  FROM (		
				SELECT @rownum:=@rownum+1 								AS num
					 , so.opinion_idx
					 , so.survey_idx									AS idx
					 , so.opinion_content
					 , so.create_user
					 , so.update_user
					 , DATE_FORMAT(so.create_date, '%Y-%m-%d %H:%i') 	AS create_date
					 , DATE_FORMAT(so.update_date, '%Y-%m-%d %H:%i') 	AS update_date
					 , so.del_chk
					 , so.survey_ref									AS ref
					 , so.survey_indent									AS indent
				     , u.auth_type 
				     , u.name
				  FROM daul.survey_opinion so
				  LEFT JOIN daul.user u ON so.create_user = u.user_id 
				 INNER JOIN (SELECT @rownum:=0) TMP
				 <!-- WHERE so.del_chk != 'Y' --> 
				 WHERE so.survey_idx = #{survey_idx}
				 ORDER BY so.survey_ref
				        , so.survey_step DESC
				) sub
			ORDER BY sub.num DESC
			LIMIT #{startIndex}, #{pageSize}
	</select>

	<select id="getSurveyQuestionList" resultType="Map">
		SELECT question_idx
			 , ref
		     , question_content
		     , q_seq
		     , select_type
		  FROM daul.survey_question
		 WHERE survey_idx = #{survey_idx}
	 	 ORDER BY ref
	 	        , question_idx
	</select>
	
	<insert id="insertVote" parameterType = "hashmap">
		INSERT INTO daul.survey_participation 
		(
			question_idx,
			survey_idx,
			participation_user,
			create_date
		)
		VALUES
		(
			#{question_idx},
			#{survey_idx},
			#{participation_user},
			sysdate()
		)
	</insert>
	
	<select id="getSurveyResult" resultType="Map">
		SELECT a.question_idx, a.question_content, count(b.question_idx) as question_count, a.type, a.ref
		  FROM survey_question a
		  LEFT JOIN survey_participation b 
		    ON a.question_idx = b.question_idx
		 WHERE a.survey_idx = #{survey_idx}
		 GROUP BY a.question_content,a.question_idx 
		 ORDER BY question_idx
	</select>
	
	<select id="selectParentSurveyOpinion" resultType="egovframework.com.survey.vo.SurveyOpinionVo">
		SELECT survey_ref
		     , survey_indent
		     , survey_step
		  FROM daul.survey_opinion
		 WHERE opinion_idx = #{opinion_idx}
	</select>
	
	<update id="updateChildSurveyOpinion">
		UPDATE daul.survey_opinion
		   SET survey_step = survey_step + 1
		 WHERE survey_ref = #{survey_ref}
		   <![CDATA[
		   AND survey_step > #{survey_step}
		   ]]>
	</update>
	
	<select id="selectSurveyOpinionIdx" resultType="String">
		SELECT CONCAT('SV-OP-',LPAD(count(*)+1,'6','0')) as 'opinion_idx'
		FROM daul.survey_opinion 
	</select>
	
	<insert id="insertSurveyOpinion">
		INSERT INTO daul.survey_opinion
		     (
		       opinion_idx
             , survey_idx
             , opinion_content
             , create_user
             , create_date
             , del_chk
             , survey_ref
             , survey_indent
             , survey_step
		     )
		VALUES
		     (
		       #{opinion_idx}
             , #{survey_idx}
             , #{opinion_content}
             , #{create_user}
             , SYSDATE()
             , 'N'
             , #{survey_ref}
             , #{survey_indent}
             , #{survey_step}
		     )
	</insert>
	
	<update id="deleteSurveyOpinion">
		UPDATE daul.survey_opinion
		   SET del_chk = 'Y'
		 WHERE opinion_idx = #{opinion_idx}
	</update>
	
	<select id="selectSurveyOpinionCount" resultType="String">
		SELECT COUNT(*)
		  FROM daul.survey_opinion
		 WHERE survey_idx = #{survey_idx}
	</select>
	
	<update id = "increaseViewCount">
		UPDATE daul.daul_notice
		   SET view_count = view_count + 1
		 WHERE notice_idx = #{notice_idx}
	</update>
	
	<select id="getBeforeNotice" resultType="egovframework.com.notice.vo.NoticeVo">
		SELECT * 
		  FROM daul_notice
		 WHERE del_chk = 'N'
		   AND notice_type='survey'
		 <![CDATA[
		   AND notice_idx > #{notice_idx}
		 ]]>
		 ORDER BY notice_idx
		 LIMIT 0 , 1;
	</select>
	
	<select id="getAfterNotice" resultType="egovframework.com.notice.vo.NoticeVo">
		SELECT * 
		  FROM daul_notice
		 WHERE del_chk = 'N'
		   AND notice_type='survey'
		 <![CDATA[
		   AND notice_idx < #{notice_idx}
		 ]]>
		 ORDER BY notice_idx desc
		 LIMIT 0 , 1;
	</select>
	
	<select id = "getSurveyNoticeFile" resultType = "Map">
		SELECT 
			notice_idx,
			org_file_name,
			save_file_name,
			attach_type,
			ROUND(file_size/1024,1) AS file_size
		FROM daul.daul_notice_attach
		WHERE notice_idx = #{notice_idx}
		  AND del_chk = 'N'
	</select>
	
	<select id="selectDownloadFile" resultType="egovframework.com.cmmn.util.FileVo">
		SELECT 
			ORG_FILE_NAME,
			SAVE_FILE_NAME
		FROM daul.daul_notice_attach
		WHERE save_file_name  = #{idx}
	</select>
	
	<select id="selectImageFile" resultType="hashmap">
		SELECT *
		  FROM daul.survey_attach
		 WHERE survey_idx = #{survey_idx}
	</select>
	
	<select id="selectSurveyParticipationUserCount" resultType="int">
		SELECT COUNT(*)
		  FROM daul.survey_participation
		 WHERE participation_user = #{create_user}
		   AND survey_idx = #{survey_idx}
	</select>
</mapper>                  